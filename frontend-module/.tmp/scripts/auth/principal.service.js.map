{"version":3,"sources":["../../../app/scripts/auth/principal.service.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;AACb,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE;AACnE,QAAI,SAAS;QAAE,cAAc,GAAG,KAAK,CAAC;;AAEtC,WAAO;AACH,0BAAkB,EAAE,8BAAY;AAC5B,mBAAO,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACvC;AACD,uBAAe,EAAE,2BAAY;AACzB,mBAAO,cAAc,CAAC;SACzB;AACD,gBAAQ,EAAE,kBAAU,IAAI,EAAE;AACtB,gBAAI,CAAC,cAAc,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACnD,uBAAO,KAAK,CAAC;aAChB;;AAED,mBAAO,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/C;AACD,mBAAW,EAAE,qBAAU,KAAK,EAAE;AAC1B,gBAAI,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACrC,uBAAO,KAAK,CAAC;aAChB;;AAED,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,oBAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACzB,2BAAO,IAAI,CAAC;iBACf;aACJ;;AAED,mBAAO,KAAK,CAAC;SAChB;AACD,oBAAY,EAAE,sBAAU,QAAQ,EAAE;AAC9B,qBAAS,GAAG,QAAQ,CAAC;AACrB,0BAAc,GAAG,QAAQ,KAAK,IAAI,CAAC;SACtC;AACD,gBAAQ,EAAE,kBAAU,KAAK,EAAE;AACvB,gBAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;;AAE1B,gBAAI,KAAK,KAAK,IAAI,EAAE;AAChB,yBAAS,GAAG,SAAS,CAAC;aACzB;;;;AAID,gBAAI,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AAC9B,wBAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE5B,uBAAO,QAAQ,CAAC,OAAO,CAAC;aAC3B;;;AAGD,mBAAO,CAAC,GAAG,EAAE,CAAC,QAAQ,CACjB,IAAI,CAAC,UAAU,OAAO,EAAE;AACrB,yBAAS,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,8BAAc,GAAG,IAAI,CAAC;AACtB,wBAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAC/B,CAAC,SACI,CAAC,YAAW;AACd,yBAAS,GAAG,IAAI,CAAC;AACjB,8BAAc,GAAG,KAAK,CAAC;AACvB,wBAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAC/B,CAAC,CAAC;AACP,mBAAO,QAAQ,CAAC,OAAO,CAAC;SAC3B;KACJ,CAAC;CACL,CAAC,CAAC","file":"principal.service.js","sourcesContent":["/* jshint -W097 */\n/* globals angular, $, Mentoring*/\n'use strict';\nangular.module('mentoringApp').factory('Principal', function ($q, Account) {\n        var _identity, _authenticated = false;\n\n        return {\n            isIdentityResolved: function () {\n                return angular.isDefined(_identity);\n            },\n            isAuthenticated: function () {\n                return _authenticated;\n            },\n            isInRole: function (role) {\n                if (!_authenticated || !_identity || !_identity.roles) {\n                    return false;\n                }\n\n                return _identity.roles.indexOf(role) !== -1;\n            },\n            isInAnyRole: function (roles) {\n                if (!_authenticated || !_identity.roles) {\n                    return false;\n                }\n\n                for (var i = 0; i < roles.length; i++) {\n                    if (this.isInRole(roles[i])) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            authenticate: function (identity) {\n                _identity = identity;\n                _authenticated = identity !== null;\n            },\n            identity: function (force) {\n                var deferred = $q.defer();\n\n                if (force === true) {\n                    _identity = undefined;\n                }\n\n                // check and see if we have retrieved the identity data from the server.\n                // if we have, reuse it by immediately resolving\n                if (angular.isDefined(_identity)) {\n                    deferred.resolve(_identity);\n\n                    return deferred.promise;\n                }\n\n                // retrieve the identity data from the server, update the identity object, and then resolve.\n                Account.get().$promise\n                    .then(function (account) {\n                        _identity = account.data;\n                        _authenticated = true;\n                        deferred.resolve(_identity);\n                    })\n                    .catch(function() {\n                        _identity = null;\n                        _authenticated = false;\n                        deferred.resolve(_identity);\n                    });\n                return deferred.promise;\n            }\n        };\n    });\n"]}