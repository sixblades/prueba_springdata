{"version":3,"sources":["../../../app/scripts/increments/limits.controller.js"],"names":[],"mappings":"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","file":"limits.controller.js","sourcesContent":["/* jshint -W097 */\n/* Controller for Wage Bands Limits funcionality */\n'use strict';\n/*@ngInject*/\nfunction WageLimitsController($rootScope, $window, WageBandLimitsService, DirectionsService) {\n\tvar vm = this;\n\t$rootScope.activeOption = 'increments';\n    vm.canSave = true;\n    vm.direction = null;\n    vm.directions = [];\n    vm.limits = [];\n    vm.currency = '';\n    vm.yearHTML = Mentoring.getCurrentYear();\n    vm.showTables = false;\n\n    /* Obtains directions */\n    DirectionsService.query({}, (result) => {\n       vm.directions = result;\n    });\n\n    /* Function executed when there is a change on direction combo */\n    vm.selectDirection = () => {\n        /* If no directions selected, set showTables flag to flase and show modal */\n        if(vm.direction === null) {\n            vm.showTables = false;\n            vm.Modal = {\n                msg: 'increments.limits.modal.warning.select',\n                title: 'increments.limits.modal.warning.title',\n                button: 'increments.limits.modal.ok',\n                action: () => {\n                    $('#myModal').modal('hide');\n                }\n            };\n            /* Now show the modal */\n            $('#myModal').modal('show');\n        } else {\n            /* Set flags to default */\n            vm.showTables = false;\n            vm.canSave = false;\n            \n            /* Obtains current year */\n            let year = Mentoring.getCurrentYear();\n            \n            /* Wage Band Limits request by year and direction. */\n            WageBandLimitsService.query({year: year, direction: vm.direction.id},\n                (result) => {\n                    /* Sets the currency symbol for the selected direction */\n                    vm.currency = vm.direction.currencySymbol;\n                    \n                    /* If there are no result, request last year info */\n                    if(result.limits.length==0) {\n                        WageBandLimitsService.query({year: year - 1, direction: vm.direction.id},\n                            (result) => {\n                                handleResult(result, true);\n                            }, errorHandler);\n                    } else {\n                        handleResult(result, false);\n                    }\n                    vm.canSave = result.canSave;\n                }, errorHandler);\n        }\n    };\n    \n    /* Function that saves limits on server */\n    vm.saveLimits = () => {\n        /* If limits are valid, process them */\n        if(validateLimits(vm.limits)) {\n            let limits = [];\n            let business = vm.limits.business;\n            for(let item in business) {\n                limits.push(business[item]);\n            }\n            let staff = vm.limits.staff;\n            for(let item in staff) {\n                limits.push(staff[item]);\n            }\n            \n            /* Request to server */\n            WageBandLimitsService.saveLimits(limits, \n                /* Success Handler */\n                (result) => {\n                    /* Shows a success modal */\n                    vm.Modal = {\n                        msg: 'increments.limits.modal.success',\n                        title: 'increments.limits.modal.success.title',\n                        button: 'increments.limits.modal.ok',\n                        action: () => {\n                            $window.location.reload();\n                        }\n                    };\n                    /* Now show the modal */\n                    $('#myModal').modal('show');\n                }, \n                /* Error Handler */\n                (error) => {\n                    /* Shows a modal error */\n                    vm.Modal = {\n                        msg: 'increments.limits.modal.error',\n                        title: 'increments.limits.modal.error.title',\n                        button: 'increments.limits.modal.ok',\n                        action: () => {\n                            $('#myModal').modal('hide');\n                        }\n                    };\n                    /* Now show the modal */\n                    $('#myModal').modal('show');\n            });\n            \n        // Else, show an error modal\n        } else {\n            /* Shows a modal error */\n            vm.Modal = {\n                msg: 'increments.limits.modal.form.error',\n                title: 'increments.limits.modal.error.title',\n                button: 'increments.limits.modal.ok',\n                action: () => {\n                    $('#myModal').modal('hide');\n                }\n            };\n            /* Now show the modal */\n            $('#myModal').modal('show');\n        }\n    };\n\n    /* Validates the limits */\n    var validateLimits = (limits) => {\n        let ok = true;\n        let scopeForm = $('form').scope().LimitsForm;\n        let business = limits.business;\n        let staff = limits.staff;\n        for(let V in business) {\n            let okValue = true;\n            let item = business[V];\n            // If minValue is equal or greater than medValue and medValue is equal or greater than maxValue, error\n            if(item.minValue >= item.medValue || item.medValue >= item.maxValue) {\n                ok = false;\n                okValue = false;\n            } \n            let errorField = 'Business.' + V + '.';\n            scopeForm[errorField + 'minValue'].$setValidity('business', okValue);\n            scopeForm[errorField + 'medValue'].$setValidity('business', okValue);\n            scopeForm[errorField + 'maxValue'].$setValidity('business', okValue);\n        }\n        for(let V in staff) {\n            let okValue = true;\n            let item = staff[V];\n            // If minValue is equal or greater than medValue and medValue is equal or greater than maxValue, error\n            if(item.minValue >= item.medValue && item.medValue >= item.maxValue) {\n                ok = false;\n                okValue = false;\n            }\n            let errorField = 'Staff.' + V + '.';\n            scopeForm[errorField + 'minValue'].$setValidity('business', okValue);\n            scopeForm[errorField + 'medValue'].$setValidity('business', okValue);\n            scopeForm[errorField + 'maxValue'].$setValidity('business', okValue);\n        }\n        return ok;\n    }\n\n    /** Handles the result of the AJAX request */\n    var handleResult = (result, removeId) => {\n        let limits = result.limits;\n\n        vm.positions = { business: {}, staff: {} };\n        vm.limits = { business: {}, staff: {} };\n        \n        var limitsToSet;\n        /* If there are no limits, get the default limits from server */\n        if(limits.length === 0) {\n            limitsToSet = result.defaultLimits;\n        /* If there are limits, creates the objects to show the tables */\n        } else {\n            limitsToSet = limits;\n        }\n        \n        // Set the limits on view\n        limitsToSet.forEach(l => {\n            let dest = l.isBusiness ? vm.limits.business : vm.limits.staff;\n            dest[l.bandName] = l;\n            if (removeId) {\n                dest[l.bandName].id = null;\n            }\n        });\n        /* Set showTables to true */\n        vm.showTables = true;\n    }\n\n    /* Handles an error on WageBandLimitsService request */\n    var errorHandler = (error) => {\n        /* Shows a modal error */\n        vm.Modal = {\n            msg: 'increments.limits.modal.error',\n            title: 'increments.limits.modal.error.title',\n            button: 'increments.limits.modal.ok',\n            action: () => {\n                $('#myModal').modal('hide');\n            }\n        };\n        /* Now show the modal */\n        $('#myModal').modal('show');\n    }\n\n};\nangular.module('mentoringApp').controller('WageLimitsController', WageLimitsController);\n"]}