{"version":3,"sources":["../../../app/scripts/consult/consultEvaluationAutoevaluation.controller.js"],"names":[],"mappings":"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","file":"consultEvaluationAutoevaluation.controller.js","sourcesContent":["/* jshint -W097 */\n/* globals angular, $, Mentoring*/\n'use strict';\n/*@ngInject*/\nfunction ConsultEvaluationAutoevaluationController($scope, $timeout, $state, $q, $sce, $translate, \n    StatesResource, CompetencesResource, PillarsResource, QuestionsResource, AnswersResource, AnswersSelect, \n    Principal, EvaluationsCn, EmpleadosCn, EvaluationsMandoCn, EvaluationsConsultLeader, AllocationsLeader,\n    EmployeeEvaluableIdResource, EmployeeLeaderResource, EmployeesDIRECTOR, LeadersDIRECTOR, EmployeesGERENTE, \n    ConsultEvaluationAutoevaluationService, LeadersGERENTE, EmployeesRRHH, LeadersRRHH, IsModificableService) {\n    \n    var vm = this;\n    \n    // Populate years combo\n    vm.years = [];\n    var currentYear = new Date().getFullYear();\n    for(var firstYear = 2015; firstYear<=currentYear; firstYear++) {\n        vm.years.push(firstYear);\n    }\n    \n    if ($state.current.name != 'login') {\n        Principal.identity().then( (account) => {\n            // Activamos la opción de menú Consulta de Evaluación\n            $scope.$root.activeOption = \"consult\";\n            vm.account = account;\n            vm.user = {\n                firstName: account.firstName,\n                lastName: account.lastName\n            };\n            vm.esModificable = true;\n\n            if (!Mentoring.isUndefinedOrNull(account) && !Mentoring.isUndefinedOrNull(account.roles)) {\n                vm.leader = {};\n                vm.evaluation = {};\n                vm.empleado = {};\n                vm.empleadoLeaderUser = {};\n                vm.isLeader = account.isLeader;\n                vm.roleUSER = account.roles.indexOf('ROLE_USER') > -1;\n                vm.roleRRHH = account.roles.indexOf('ROLE_RRHH') > -1;\n                vm.roleGERENTE = account.roles.indexOf('ROLE_GERENTE') > -1;\n                vm.roleDIRECTOR = account.roles.indexOf('ROLE_DIRECTOR') > -1;\n                vm.roleDIRECTORG = account.roles.indexOf('ROLE_DIRECTORG') > -1;\n                vm.roleADMIN = account.roles.indexOf('ROLE_ADMIN') > -1;\n            \n                // Handle the visibility permissions\n                if (vm.roleRRHH || vm.roleGERENTE || vm.roleDIRECTOR || vm.roleDIRECTORG || vm.roleADMIN) {\n                    vm.isVisibleMando = true;\n                } else if(vm.isLeader) {\n                    vm.isVisibleLeader = true;\n                }\n\n                if (vm.roleUSER && !(vm.roleRRHH || vm.roleGERENTE || vm.roleDIRECTOR || vm.roleDIRECTORG || vm.roleADMIN)) {\n                    if (vm.isLeader === 0) {\n                        vm.empleadosLeaderUser = EvaluationsConsultLeader.query({\n                            leaderId: account.employeeId\n                        });\n                    } else {\n                        vm.empleadosLeaderUser = EvaluationsConsultLeader.query({\n                            leaderId: account.employeeId\n                        });\n                    }\n                    vm.esModificable = false;\n                }\n\n                if (vm.roleADMIN || vm.roleDIRECTORG) {\n                    let promises = [];\n                    promises.push(EmployeeEvaluableIdResource.query({},\n                         (result) => {\n                             vm.empleados = result;\n                    }).$promise);\n                    promises.push(EmployeeLeaderResource.query({}, (result) => {\n                        vm.leaders = result;\n                    }).$promise);\n                    \n                    // Once all the request have finished, do the combo selection\n                    $q.all(promises).then(() => {\n                        // If there is a selected employee, only when we come back for consultEvaluation state\n                        if(vm.empleado.info) {\n                            vm.change(vm.empleado.info.id);\n                        }\n                    });\n                }\n\n                if (vm.roleDIRECTOR) {\n                    vm.empleados = EmployeesDIRECTOR.query({\n                        directionId: account.employeeId\n                    });\n                    vm.leaders = LeadersDIRECTOR.query({\n                        directionId: account.employeeId\n                    });\n                    vm.esModificable = false;\n                }\n                \n                if (vm.roleGERENTE) {\n                    vm.empleados = EmployeesGERENTE.query({\n                        managerId: account.employeeId\n                    });\n                    vm.leaders = LeadersGERENTE.query({\n                        managerId: account.employeeId\n                    });\n                }\n\n                if (vm.roleRRHH) {\n                    EmployeesRRHH.query(function(result4) {\n                        vm.empleados = result4;\n                        //busca y recupera el propio usuario para añadirlo a la lista de empleados\n                        //los empleados con rol rrhh no ven a los otros de rrhh y asi puede verse a si mismo\n                        EmpleadosCn.query({\n                            employeeId: account.employeeId\n                        }, function(result) {\n                            angular.forEach(result, function(current) {\n                                if (current.id == account.employeeId) {\n                                    vm.empleados.push(current);\n                                }\n                            });\n                        });\n                    });\n                    LeadersRRHH.query(function(result5) {\n                        vm.leaders = result5;\n                    });\n                }\n            }\n            if ($state.current.name !== 'login') {\n                vm.isAuthenticated = Principal.isAuthenticated();\n            }\n        });\n    }\n      \n    vm.isEvaluador = (evaluacion) => {\n        return evaluacion.leaderId == vm.account.employeeId;\n    };\n    \n    vm.modificable = (evaluacion) => {\n        return IsModificableService.modificable(vm.account, evaluacion, vm.isEvaluationDate, vm.isFinalEvaluationDate, vm.roleRRHH, vm.roleDIRECTORG, vm.roleADMIN);\n    };\n    \n    // Get the employee self evaluation and his/her final evaluation.\n    vm.getEvaluationsEmployee = (employeeId) => {\n        if (!Mentoring.isUndefinedOrNull(employeeId)) {\n            vm.autoEvaluation = null;\n            vm.finalEvaluation = null;\n            \n            if (Mentoring.isUndefinedOrNull(vm.year)) {\n                vm.year = vm.years[vm.years.length -1];\n            }\n            // Get employee evaluations\n            ConsultEvaluationAutoevaluationService.get({employeeId: employeeId, year: vm.year}, \n                (result) => {\n                    // If there is no auto evaluation or no autoevaluation\n                    if(result.finalEvaluation === null || result.autoEvaluation === null) {\n                        let msg = result.finalEvaluation == null ? 'consult.evalauto.modal.final.evaluation.error' : 'consult.evalauto.modal.auto.evaluation.error';\n                        vm.Modal = {\n                            msg,\n                            title: 'consult.evalauto.modal.error.title',\n                            button: 'consult.evalauto.modal.ok',\n                            action: () => {\n                                $('#myModal').modal('hide');\n                            }\n                        };\n                        $('#myModal').modal('show');\n                        return;\n                    }\n                    \n                    vm.metadata = {};\n                    vm.autoEvaluation = {\n                        respuesta: [], destacados: [], mejorar: [], listSelect: []\n                    };\n                    vm.finalEvaluation = {\n                        respuesta: [], destacados: [], mejorar: [], listSelect: []\n                    };\n                   \n                    let finalEv = result.finalEvaluation;\n                    let autoEv = result.autoEvaluation;\n                    $translate('consult.evalauto.evaluation.' + autoEv.evaluationType).then((value) => {\n                        vm.metadata.autoEvaluation = {\n                            creationDate: autoEv.creationDate,\n                            employeeName: autoEv.employee.firstSurname + ' ' + autoEv.employee.secondSurname  + ', ' + autoEv.employee.name,\n                            leaderName: autoEv.leader.firstSurname + ' ' + autoEv.leader.secondSurname  + ', ' + autoEv.leader.name,\n                            evaluationType: value\n                        }\n                    });\n                    $translate('consult.evalauto.evaluation.' + finalEv.evaluationType).then((value) => {\n                        vm.metadata.finalEvaluation  = {\n                                creationDate: finalEv.creationDate,\n                                employeeName: finalEv.employee.firstSurname + ' ' + finalEv.employee.secondSurname  + ', ' + finalEv.employee.name,\n                                leaderName: finalEv.leader.firstSurname + ' ' + finalEv.leader.secondSurname  + ', ' + finalEv.leader.name,\n                                evaluationType: value\n                        }\n                    });\n                    \n                    CompetencesResource.query({}, (result) =>{\n                        vm.competences = result;\n                    });\n                    PillarsResource.query((result) => {\n                        vm.pillars = result;\n                    });\n                    \n                    let promise;\n                    if (vm.isLeader === 0){\n                        promise = QuestionsResource.query({leader: 0} , (result) => {\n                            vm.questionss = result;  \n                        }).$promise;\n                    } else{\n                        promise = QuestionsResource.query((result) => {\n                            vm.questionss = result;  \n                        }).$promise;\n                    }\n                    promise.then(() => {\n                        handleAnswersResponse(result.autoEvaluation.id, vm.autoEvaluation, result.weightQuestions);\n                        handleAnswersResponse(result.finalEvaluation.id, vm.finalEvaluation, result.weightQuestions);\n                    });\n            }, (err) => {\n                let msg = err.data.msg || 'consult.evalauto.modal.error';\n                vm.Modal = {\n                    msg,\n                    title: 'consult.evalauto.modal.error.title',\n                    button: 'consult.evalauto.modal.ok',\n                    action: () => {\n                        $('#myModal').modal('hide');\n                    }\n                };\n                $('#myModal').modal('show');\n                return;\n            });\n        }\n    };\n    \n    // Handles the changes on the evaluator combo\n    vm.changeEvaluator = (leaderId) => {\n        vm.autoEvaluation = null;\n        vm.finalEvaluation = null;\n        if(Mentoring.isUndefinedOrNull(vm.empleadosCopy)) {\n            vm.empleadosCopy = angular.copy(vm.empleados);\n        }\n        if (Mentoring.isUndefinedOrNull(leaderId)) {\n            vm.empleados = vm.empleadosCopy; \n        } else {\n            AllocationsLeader.query({leaderId: leaderId}, (result) => {\n                let emps = [];\n                for(let i=0, len = result.length; i<len; i++) {\n                    emps.push(result[i].employeeId);\n                }\n                vm.empleados = vm.empleadosCopy.filter((emp) => {\n                    return emps.indexOf(emp.id) >= 0;\n                });\n            });\n        }\n    };\n    \n    // Handles the changes on the years combo\n    vm.changeYear = () => {\n        // Only do something if the others combos have value.\n        if(!Mentoring.isUndefinedOrNull(vm.empleado.info) && !Mentoring.isUndefinedOrNull(vm.leader.info)) {\n            vm.getEvaluationsEmployee(vm.empleado.info.id);\n        } \n    }\n    \n    \n    var handleAnswersResponse = (id, evaluation, weightQuestions) => {\n        let promises = [];\n        // Obtains the evaluation answers\n        promises.push(AnswersResource.query({id: id}, (result) =>  {\n            let seleccionados = [];\n            let competences = { 1: false, 2: false, 3: false};\n            \n            for (let a=0, len = result.length; a<len; a++){\n                let item = result[a];\n                \n                // Obtains the question relative to the answer\n                let question = vm.questionss.filter((q) => {\n                    return q.id == item.questionId;\n                });\n                \n                // Adds the competenceId to the map\n                competences[question[0].competenceId] = true;\n                \n                // Creates the answer object containing the question code, competence, pillar and value\n                let sel = {\n                    class: '',\n                    questionId: question[0].questionsCode,\n                    pillarId: question[0].pillarId,\n                    value: item.statesId,\n                    competenceId: question[0].competenceId\n                }\n                seleccionados[a] = sel;\n            }\n            \n            // Now trim the competence array to show only the competences which apply\n            let competencesTrim = [];\n            for(let o=0, len=vm.competences.length; o<len; o++) {\n                let item = vm.competences[o];\n                if(competences[item.competenceId]) {\n                    competencesTrim.push(item);\n                }\n            }\n            vm.competences = competencesTrim;\n            \n            evaluation.respuesta = seleccionados;\t   \n        }).$promise);\t\n        \n        promises.push(AnswersSelect.query({id: id}, (result22) => {\n            if (result22.length>0){\n                evaluation.destacados = [result22[0].questionCode,\n                                result22[1].questionCode,\n                                result22[2].questionCode];\n                                \n                evaluation.mejorar = [result22[3].questionCode,\n                                result22[4].questionCode,\n                                result22[5].questionCode];\n                                \n                evaluation.listSelect = [evaluation.destacados[0], evaluation.destacados[1], evaluation.destacados[2],\n                                evaluation.mejorar[0], evaluation.mejorar[1], evaluation.mejorar[2]];\n            }\n        }).$promise);\n        \n        $q.all(promises).then(() => {\n            for(let a=0, l=evaluation.respuesta.length; a<l; a++) {\n                let item = evaluation.respuesta[a];\n                \n                // First obtains the question weight\n                let weightQuestion = weightQuestions.filter((wq) => {\n                    return wq.question.questionsCode === item.questionId;\n                });\n                let wq = weightQuestion[0];\n                \n                // If the current competence, is key and is on the competences to improve and the score is medium-low,\n                // mark the competence as critical\n                if(item.value<=3 && wq.value === 5) {\n                    if(evaluation.mejorar.indexOf(item.questionId)>-1) {\n                        item.class = 'critical';\n                    }                 \n                }\n                \n                // If there are no colour yet, search the question weight to obtain its colour.\n                if(item.class === '') {\n                    switch(wq.value) {\n                        case 3: item.class = 'medium'; break;\n                        case 5: item.class = 'high'; break;\n                    }\n                }\n                \n                // Finally, get the item translation\n                let key = 'Estado' + item.value;\n                item.label = $translate.instant(key);\n            }\n        });\n    } \n    \n    vm.getQuestionCode= (questionCode) => {\n        vm.codePregunta = questionCode; \n        vm.definicionInfo = $sce.trustAsHtml($translate.instant('evaluation.info.'+questionCode+'.comportamientoInfo'));\n    };\n}\nangular.module('mentoringApp')\n    .controller('ConsultEvaluationAutoevaluationController', ConsultEvaluationAutoevaluationController);"]}