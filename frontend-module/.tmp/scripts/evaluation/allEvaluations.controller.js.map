{"version":3,"sources":["../../../app/scripts/evaluation/allEvaluations.controller.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,SAAS,wBAAwB,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,0BAA0B,EAAE;AACrG,QAAI,EAAE,GAAG,IAAI,CAAC;AACd,cAAU,CAAC,YAAY,GAAG,SAAS,CAAC;;AAEpC,MAAE,CAAC,QAAQ,GAAG,YAAM;AAChB,YAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,EAAE;;AAEhC,qBAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,YAAM;AAC5B,oBAAG,CAAC,SAAS,CAAC,eAAe,EAAE;AAC3B,0BAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;iBACtB;;;AAGD,oBAAI,SAAS,GAAG,IAAI,CAAC;AACrB,oBAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACtB,kBAAE,CAAC,KAAK,GAAG,EAAE,CAAC;AACd,uBAAM,SAAS,IAAE,IAAI,CAAC,WAAW,EAAE,EAAE;AACjC,sBAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzB,6BAAS,EAAE,CAAC;iBACf;aACJ;;;AAGD,sBAAC,GAAG,EAAK;AACL,sBAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;aACtB,CAAC,CAAC;SACN;KACJ,CAAC;;;AAGF,MAAE,CAAC,UAAU,GAAG,YAAM;AAClB,UAAE,CAAC,SAAS,GAAG,KAAK,CAAC;AACrB,UAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAC5B,UAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;AAC/B,YAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACtC,aAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;;AAE/D,sCAA0B,CAAC,iBAAiB,CAAC,EAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAC,EAAE,UAAC,GAAG,EAAK;AACnE,kBAAE,CAAC,WAAW,GAAG,GAAG,CAAC;AACrB,mBAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK;;AAEX,wBAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;AAC1B,qBAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,GAAG,GAAG,GAAG,QAAQ,CAAC,aAAa,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;;;AAG9F,wBAAG,CAAC,CAAC,SAAS,EAAE;AACZ,4BAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;AAC5B,yBAAC,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,YAAY,GAAG,GAAG,GAAG,SAAS,CAAC,aAAa,GAAG,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;qBACrG;;;AAGD,wBAAI,WAAW,GAAG,sBAAsB,CAAC;AACzC,wBAAG,CAAC,CAAC,cAAc,EAAE;AACjB,mCAAW,IAAI,IAAI,CAAC;AACpB,yBAAC,CAAC,mBAAmB,GAAG,cAAc,CAAC;qBAC1C,MAAM;AACH,mCAAW,IAAI,IAAI,CAAC;AACpB,yBAAC,CAAC,mBAAmB,GAAG,YAAY,CAAC;qBACxC;AACD,qBAAC,CAAC,cAAc,GAAG,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;;AAGnD,wBAAI,YAAY,GAAG,sBAAsB,CAAC;AAC1C,wBAAG,CAAC,CAAC,eAAe,EAAE;AAClB,oCAAY,IAAI,IAAI,CAAC;AACrB,yBAAC,CAAC,oBAAoB,GAAG,cAAc,CAAC;qBAC3C,MAAM;AACH,oCAAY,IAAI,IAAI,CAAC;AACrB,yBAAC,CAAC,oBAAoB,GAAG,YAAY,CAAC;qBACzC;AACD,qBAAC,CAAC,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;iBACxD,CAAC,CAAC;AACH,kBAAE,CAAC,SAAS,GAAG,IAAI,CAAC;;AAEpB,iBAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aACxC,EAAE,UAAC,GAAG,EAAK;AACR,iBAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACrC,kBAAE,CAAC,KAAK,GAAG;AACP,uBAAG,EAAE,yBAAyB;AAC9B,yBAAK,EAAE,2BAA2B;AAClC,0BAAM,EAAE,wBAAwB;AAChC,0BAAM,EAAE,kBAAM;AACV,yBAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;qBAC/B;iBACJ,CAAC;AACF,iBAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN;KACJ,CAAA;;AAED,MAAE,CAAC,QAAQ,GAAG,YAAM;AAChB,YAAI,GAAG,GAAG,sCAAsC,GAAG,EAAE,CAAC,IAAI,CAAC;AAC3D,cAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC1B,UAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC3B,UAAE,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACjC,CAAA;;AAED,MAAE,CAAC,QAAQ,EAAE,CAAC;CACjB,CAAC;AACF,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC","file":"allEvaluations.controller.js","sourcesContent":["/* jshint -W097 */\n/* globals angular, $, Mentoring*/\n'use strict';\n/*@ngInject*/\nfunction AllEvaluationsController($rootScope, $state, $translate, Principal, EmployeesEvaluationService) {\n    var vm = this;\n    $rootScope.activeOption = 'consult';\n    \n    vm.onNgInit = () => {\n        if ($state.current.name != 'login') {\n            // Check if the user is authenticated before doing anything\n            Principal.identity().then(() => {\n                if(!Principal.isAuthenticated) {\n                    $state.go('login');\n                }\n                \n                // Creates the year array. The first year will always be 2015.\n                let firstYear = 2015;\n                let date = new Date();\n                vm.years = [];\n                while(firstYear<=date.getFullYear()) {\n                    vm.years.push(firstYear);\n                    firstYear++;\n                }\n            }, \n            \n            // If not authenticated, forward to login page\n            (err) => {\n                $state.go('login');      \n            });\n        } \n    };\n    \n    /** Handles the change on year combo */\n    vm.changeYear = () => {\n        vm.showTable = false;\n        vm.excelDownloading = false;\n        vm.excelButtonDisabled = false;\n        if(!Mentoring.isUndefinedOrNull(vm.year)) {\n            $('#pleaseWaitDialog').modal({backdrop: 'static', show: true});\n            \n            EmployeesEvaluationService.getAllEvaluations({year: vm.year}, (res) => {\n                vm.evaluations = res;\n                res.map((r) => {\n                    // First, obtain the emplyee's full name\n                    let employee = r.employee;\n                    r.employee.name = employee.firstSurname + ' ' + employee.secondSurname + ', ' + employee.name;\n                    \n                    // Then, obtains the evaluator name\n                    if(r.evaluator) {\n                        let evaluator = r.evaluator;\n                        r.evaluator.name = evaluator.firstSurname + ' ' + evaluator.secondSurname + ', ' + evaluator.name;\n                    }\n                    \n                    // Obtains the self evaluation label text and its class\n                    let selfEvalKey = 'evaluationAll.tabla.';\n                    if(r.selfEvaluation) {\n                        selfEvalKey += 'si';\n                        r.selfEvaluationClass = 'circle-green';\n                    } else {\n                        selfEvalKey += 'no';\n                        r.selfEvaluationClass = 'circle-red';\n                    }\n                    r.selfEvaluation = $translate.instant(selfEvalKey);\n                    \n                    // Same for final evaluation\n                    let finalEvalKey = 'evaluationAll.tabla.';\n                    if(r.finalEvaluation) {\n                        finalEvalKey += 'si';\n                        r.finalEvaluationClass = 'circle-green';\n                    } else {\n                        finalEvalKey += 'no';\n                        r.finalEvaluationClass = 'circle-red';\n                    }\n                    r.finalEvaluation = $translate.instant(finalEvalKey);\n                });\n                vm.showTable = true;\n                \n                $('#pleaseWaitDialog').modal('hide');\n            }, (err) => {\n                $('#pleaseWaitDialog').modal('hide');\n                vm.Modal = {\n                    msg: 'evaluationAll.modal.msg',\n                    title: 'evaluationAll.modal.title',\n                    button: 'evaluationAll.modal.ok',\n                    action: () => {\n                        $('#myModal').modal('hide');\n                    }\n                };\n                $('#myModal').modal('show');\n            });\n        }\n    }\n    \n    vm.getExcel = () => {\n        let url = 'api/employeesEvaluationAll.xls?year=' + vm.year;\n        window.open(url, '_self');\n        vm.excelDownloading = true;\n        vm.excelButtonDisabled = true;\n    }\n    \n    vm.onNgInit();\n};\nangular.module('mentoringApp').controller('AllEvaluationsController', AllEvaluationsController);"]}